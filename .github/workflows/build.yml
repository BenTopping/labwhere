name: Build Project
on:
  release:
    types: published
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
    - name: Cache gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-build-${{ hashFiles('**/Gemfile.lock') }}
        # If we don't find the specific cache we want, fallback to the last raketests
        # cache, then finally any cache for this repo.
        # Github looks for the newest cache beginning with the first entry, before
        # falling back the the second if none is present.
        restore-keys: |
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Setup environment
      run: bundle config path vendor/bundle

    - name: Compile Build
      run: ./compile-build

    - name: Upload release.gz
      id: upload-release-gz
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} # Pull the URL from the event
        asset_path: ./release.tar.gz
        asset_name: gh-release.tar.gz
        asset_content_type: application/gzip